{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Palatino-Roman;\f1\fswiss\fcharset0 Helvetica;\f2\fmodern\fcharset0 CourierNewPSMT;
}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red26\green26\blue26;}
{\*\expandedcolortbl;;\csgray\c100000;\csgray\c13700;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx10080\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs28 \cf0 On cr\'e9e un action-watcher avec :\
\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx10080\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf2 \cb3 \up4 <$Scr_Cs::0>
\f2\fs22 \
	<user>.action_watchers.create(<hash data>)\
\
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx10080\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs24 \cf0 \cb1 \up0 <!$Scr_Cs::0>
\f0\fs28 \
Hash data doit imp\'e9rativement comporter :\
\
	
\b :path
\b0  ou 
\b :action_watcher_path
\b0 \
		Le chemin d'acc\'e8s au dossier contenant les \'e9l\'e9ments du watchers, \'e0 partir de\
		./lib/action_watchers/\
		Par exemple 'user/traitement_candidature'\
		Bien s\'fbr, ce path doit renvoyer \'e0 un dossier existant.\
\
	
\b :model
\b0  (String) et 
\b :model_id
\b0  (Integer) ou 
\b :objet
\b0  (instance de class :model)\
		L'objet vis\'e9 par l'action-watcher, par exemple un document.\
		Le format privil\'e9gi\'e9 est 
\f1\fs24 \cf2 \cb3 \up4 <$Scr_Cs::0>
\f2\fs22 objet: <instance>
\f1\fs24 \cf0 \cb1 \up0 <!$Scr_Cs::0>
\f0\fs28 \
		C'est le nom de classe exacte qui doit \'eatre transmis par :model. P.e. \'ab\'a0IcModule\'a0\'bb.\
\
	
\b :triggered_at
\b0  ou 
\b :at
\b0  ou 
\b :in
\b0 \
		Temps o\'f9 le watcher devra \'eatre d\'e9clench\'e9.\
		
\b :triggered_at
\b0  et 
\b :at
\b0  sont des alias\
		
\b :in
\b0  permet de d\'e9finir dans combien de temps l'action-watcher devra se d\'e9clencher. Par \
		exemple, suite au d\'e9marrage du module, l'user \'e0 15 jours gratuit. Donc on cr\'e9e un \
		action-watcher de paiement avec `in: 15.days`.\
		}