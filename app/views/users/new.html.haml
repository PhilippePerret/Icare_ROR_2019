- set_title(I18n.t('users.signup.title'))

.container
  .col-md-6.col-md-offset-3
    -# Noter que ci-dessous on n'utilise pas 'multipart: true' parce que
    -# les fichiers (présentation, motivation, extraits) ne sont pas dans les
    -# propriétés de @user et 'multipart: true' ne fonctionnerait que si
    -# on utilisait f.file_field. Mais si on utilisait f.file_field, les
    -# documents seraient mis dans les propriétés de :user dans params et ça
    -# poserait un problème pour le filtre des StrongParamètres.
    = form_for(@user, url: signup_path, method: :post, html: {id: 'user_signup', 'enctype' => 'multipart/form-data'}) do |f|
      -# = render 'shared/error_messages', objet: @user
      = render 'shared/error_messages', objet: current_user

      -# On présente le formulaire d'identité, mais seulement si
      -# l'user n'a pas déjà été enregistré dans la base. Cela se produit
      -# lorsque les données sont valides, mais qu'il n'a pas fourni ses
      -# documents ou choisit des modules d'apprentissage
      - unless current_user.real?
        %h3 Identité
        .container-fluid
          = render 'users/form', f: f
        .w-100
      - else
        -# Si l'identité du candidat a déjà été enregistrée. Ce texte est
        -# affiché soit lors de la première inscription, soit lorsque l'user
        -# revient se connecter.
        %p.red
          = I18n.t('users.signup.errors.merci_de_completer')
        -# Pour que params[:user] soit toujours retourné
        = f.hidden_field(:id)

      -# -------- LES DOCUMENTS DE PRÉSENTATION --------------------
      %h3 Documents de présentation
      .container
        .bold.small.italic.red
          Attention : la présentation et la lettre de motivation sont obligatoires.
        - unless current_user.respond_to?(:presentation_ok?) && current_user.presentation_ok?
          = label_tag('candidature[doc_presentation]', 'Votre présentation (Bio/CV)')
          = file_field_tag('candidature[doc_presentation]')
        - unless current_user.respond_to?(:motivation_ok?) && current_user.motivation_ok?
          = label_tag('candidature[doc_motivation]', 'Lettre de motivation')
          = file_field_tag('candidature[doc_motivation]')
        - unless current_user.respond_to?(:extraits_ok?) && current_user.extraits_ok?
          = label_tag('candidature[doc_extraits]', 'Extraits de textes (facultatif)')
          = file_field_tag('candidature[doc_extraits]')
      .w-100

      - unless current_user.respond_to?(:modules_optionned) && current_user.modules_optionned
        %h3 Modules d’apprentissage optionnés
        .container.italic.small
          Cochez les modules envisagés dans la liste ci-dessous.
          .bold{style:'color:red;'}
            Attention : il faut choisir au moins un module d’apprentissage.
        .container
          = AbsModulesHelper.liste_modules_a_checker(prefix_id: 'candidature')
      - else
        -# Si les modules d'apprentissage ont déjà été choisis
        = f.hidden_field(:modules_optionned)

      -# ------- LE BOUTON DE SOUMISSION -----------
      .right.vair
        = f.submit(I18n.t('users.signup.button'), name: 'commit', class: 'btn btn-primary')
